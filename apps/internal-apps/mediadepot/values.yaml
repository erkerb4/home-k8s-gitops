sabnzbd:
  global:
    fullnameOverride: sabnzbd
  defaultPodOptions:
    automountServiceAccountToken: false
    dnsConfig:
      options:
        - name: ndots
          value: "3"
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 75
          preference:
            matchExpressions:
            - key: feature.node.kubernetes.io/cpu-model.family
              operator: In
              values:
              - "25"
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 50
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - plex
            namespaces:
            - plex
            topologyKey: kubernetes.io/hostname
  controllers:
    sabnzbd:
      type: deployment
      annotations:
        secrets.infisical.com/auto-reload: "true"
      initContainers:
        copy-config:
          image:
            repository: "quay.io/prometheus/busybox"
            tag: "latest"
            pullPolicy: Always
          command: ["sh", "-c", "cp /cm/sabnzbd-configmap.ini /config/sabnzbd.ini && chown 911:911 /config/sabnzbd.ini"]
      containers:
        main:
          image:
            repository: ghcr.io/linuxserver/sabnzbd
            tag: "4.3.2"
            pullPolicy: IfNotPresent
          env:
            TZ: "America/New_York"
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
          resources:
            limits:
              cpu: "8"
              memory: 3500Mi
            requests:
              cpu: 125m
              memory: 128Mi
  service:
    app:
      controller: sabnzbd
      ports:
        http:
          enabled: true
          port: 8080
          primary: true
          protocol: HTTP
  ingress:
    main:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: le-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.pathmatcher: PathPrefix
      hosts:
        - host: mediadepot.xtr.pub
          paths:
            - path: /sabnzbd
              pathType: Prefix
              service:
                identifier: app
                port: http
      tls:
      - hosts:
        - mediadepot.xtr.pub
        secretName: tls-secret
  persistence:
    config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 128Mi
      storageClass: ec-silver
      globalMounts:
        - path: /config
    incomplete-downloads:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 150Gi
      storageClass: ec-gold-r1
      globalMounts:
        - path: /incomplete-downloads
    downloads:
      enabled: true
      type: persistentVolumeClaim
      existingClaim: "mediadepot-downloads"
      globalMounts:
        - path: /downloads
    cm-config:
      enabled: true
      type: custom
      volumeSpec:
        secret:
          secretName: sabnzbd-config
      globalMounts:
        - path: /cm

  networkpolicies:
    main:
      enabled: true
      controller: sabnzbd
      policyTypes:
        - Ingress
        - Egress
      rules:
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/instance: mediadepot
          - from:
              - namespaceSelector:
                  matchLabels:
                    name: traefik
                podSelector:
                  matchLabels:
                     app.kubernetes.io/name: traefik
        egress:
          - ports:
            - port: 53
              protocol: UDP
            to:
            - namespaceSelector: {}
              podSelector:
                matchLabels:
                  k8s-app: kube-dns
          - to:
              - ipBlock:
                  cidr: 0.0.0.0/0

sonarr:
  global:
    fullnameOverride: sonarr
  defaultPodOptions:
    automountServiceAccountToken: false
    dnsConfig:
      options:
        - name: ndots
          value: "3"
    labels:
      application: sonarr
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 25
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - sabnzbd
            topologyKey: kubernetes.io/hostname
  controllers:
    sonarr:
      type: deployment
      annotations:
        secrets.infisical.com/auto-reload: "true"
      initContainers:
        copy-config:
          image:
            repository: "quay.io/prometheus/busybox"
            tag: "latest"
            pullPolicy: Always
          command: ["sh", "-c", "cp /cm/config.xml /config/config.xml && chown 911:911  /config/config.xml"]
      containers:
        main:
          image:
            repository: ghcr.io/linuxserver/sonarr
            tag: "4.0.5"
            pullPolicy: IfNotPresent
          env:
            TZ: "America/New_York"
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 125m
              memory: 128Mi
  service:
    app:
      controller: sonarr
      extraSelectorLabels:
        application: sonarr
      ports:
        http:
          enabled: true
          port: 8989
          primary: true
          protocol: HTTP
  ingress:
    main:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.pathmatcher: PathPrefix
      hosts:
        - host: mediadepot.xtr.pub
          paths:
            - path: /tv
              pathType: Prefix
              service:
                identifier: app
                port: http
      tls:
      - hosts:
        - mediadepot.xtr.pub
  persistence:
    config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      storageClass: ec-silver
      globalMounts:
        - path: /config
    downloads:
      enabled: true
      type: persistentVolumeClaim
      existingClaim: "mediadepot-downloads"
      globalMounts:
        - path: /downloads
    cm-config:
      enabled: true
      type: custom
      volumeSpec:
        secret:
          secretName: sonarr-config
      globalMounts:
        - path: /cm
    tv:
      enabled: true
      type: custom
      volumeSpec:
        nfs:
          server: 192.168.30.20
          path: /volume1/entertainment/tvshows

  networkpolicies:
    main:
      enabled: true
      controller: sonarr
      policyTypes:
        - Ingress
        - Egress
      rules:
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/instance: mediadepot
          - from:
              - namespaceSelector:
                  matchLabels:
                    name: traefik
                podSelector:
                  matchLabels:
                     app.kubernetes.io/name: traefik
          - from:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: overseerr
                podSelector:
                  matchLabels:
                    app.kubernetes.io/name: overseerr
        egress:
          - ports:
            - port: 53
              protocol: UDP
            to:
            - namespaceSelector: {}
              podSelector:
                matchLabels:
                  k8s-app: kube-dns
          - to:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/component: sabnzbd
          - to:
            - namespaceSelector:
                matchLabels:
                  kubernetes.io/metadata.name: plex
              podSelector:
                matchLabels:
                  app.kubernetes.io/instance: plex
          - to:
              - ipBlock:
                  cidr: 0.0.0.0/0

radarr:
  global:
    fullnameOverride: radarr
  defaultPodOptions:
    automountServiceAccountToken: false
    dnsConfig:
      options:
        - name: ndots
          value: "3"
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 25
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - sabnzbd
            topologyKey: kubernetes.io/hostname
  controllers:
    radarr:
      type: deployment
      annotations:
        secrets.infisical.com/auto-reload: "true"
      initContainers:
        copy-config:
          image:
            repository: "quay.io/prometheus/busybox"
            tag: "latest"
            pullPolicy: Always
          command: ["sh", "-c", "cp /cm/config.xml /config/config.xml && chown 911:911  /config/config.xml"]
      containers:
        main:
          image:
            repository: ghcr.io/linuxserver/radarr
            tag: "5.6.0"
            pullPolicy: IfNotPresent
          env:
            TZ: "America/New_York"
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 125m
              memory: 256Mi
  service:
    app:
      controller: radarr
      ports:
        http:
          enabled: true
          port: 7878
          primary: true
          protocol: HTTP
  ingress:
    main:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.pathmatcher: PathPrefix
      hosts:
        - host: mediadepot.xtr.pub
          paths:
            - path: /movies
              pathType: Prefix
              service:
                identifier: app
                port: http
      tls:
      - hosts:
        - mediadepot.xtr.pub
  persistence:
    config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 2Gi
      storageClass: ec-silver
      globalMounts:
        - path: /config
    downloads:
      enabled: true
      type: persistentVolumeClaim
      existingClaim: "mediadepot-downloads"
      globalMounts:
        - path: /downloads
    cm-config:
      enabled: true
      type: custom
      volumeSpec:
        secret:
          secretName: radarr-config
      globalMounts:
        - path: /cm
    movies:
      enabled: true
      type: custom
      volumeSpec:
        nfs:
          server: 192.168.30.20
          path: /volume1/entertainment/movies

  networkpolicies:
    main:
      enabled: true
      controller: radarr
      policyTypes:
        - Ingress
        - Egress
      rules:
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/instance: mediadepot
          - from:
              - namespaceSelector:
                  matchLabels:
                    name: traefik
                podSelector:
                  matchLabels:
                     app.kubernetes.io/name: traefik
          - from:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: overseerr
                podSelector:
                  matchLabels:
                    app.kubernetes.io/name: overseerr
        egress:
          - ports:
            - port: 53
              protocol: UDP
            to:
            - namespaceSelector: {}
              podSelector:
                matchLabels:
                  k8s-app: kube-dns
          - to:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/component: sabnzbd
          - to:
            - namespaceSelector:
                matchLabels:
                  kubernetes.io/metadata.name: plex
              podSelector:
                matchLabels:
                  app.kubernetes.io/instance: plex
          - to:
              - ipBlock:
                  cidr: 0.0.0.0/0

readarr:
  global:
    fullnameOverride: readarr
  defaultPodOptions:
    automountServiceAccountToken: false
    dnsConfig:
      options:
        - name: ndots
          value: "3"
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 25
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - sabnzbd
            topologyKey: kubernetes.io/hostname
  controllers:
    readarr:
      type: deployment
      annotations:
        secrets.infisical.com/auto-reload: "true"
      initContainers:
        copy-config:
          image:
            repository: "quay.io/prometheus/busybox"
            tag: "latest"
            pullPolicy: Always
          command: ["sh", "-c", "cp /cm/config.xml /config/config.xml && chown 911:911  /config/config.xml"]
      containers:
        main:
          image:
            repository: ghcr.io/linuxserver/readarr
            tag: "develop-version-0.4.10.2734"
            pullPolicy: IfNotPresent
          env:
            TZ: "America/New_York"
          probes:
            liveness:
              enabled: true
            readiness:
              enabled: true
            startup:
              enabled: true
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 125m
              memory: 256Mi
  service:
    app:
      controller: readarr
      ports:
        http:
          enabled: true
          port: 8787
          primary: true
          protocol: HTTP
  ingress:
    main:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.pathmatcher: PathPrefix
      hosts:
        - host: mediadepot.xtr.pub
          paths:
            - path: /books
              pathType: Prefix
              service:
                identifier: app
                port: http
      tls:
      - hosts:
        - mediadepot.xtr.pub
  persistence:
    config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      storageClass: ec-silver
      globalMounts:
        - path: /config
    downloads:
      enabled: true
      type: persistentVolumeClaim
      existingClaim: "mediadepot-downloads"
      globalMounts:
        - path: /downloads
    cm-config:
      enabled: true
      type: custom
      volumeSpec:
        secret:
          secretName: readarr-config
      globalMounts:
        - path: /cm
    books:
      enabled: true
      type: custom
      volumeSpec:
        nfs:
          server: 192.168.30.20
          path: /volume1/entertainment/reading
  networkpolicies:
    main:
      enabled: true
      controller: readarr
      policyTypes:
        - Ingress
        - Egress
      rules:
        ingress:
          - from:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/instance: mediadepot
          - from:
              - namespaceSelector:
                  matchLabels:
                    name: traefik
                podSelector:
                  matchLabels:
                     app.kubernetes.io/name: traefik
        egress:
          - ports:
            - port: 53
              protocol: UDP
            to:
            - namespaceSelector: {}
              podSelector:
                matchLabels:
                  k8s-app: kube-dns
          - to:
              - podSelector:
                  matchLabels:
                    app.kubernetes.io/component: sabnzbd
          - to:
              - ipBlock:
                  cidr: 0.0.0.0/0


backupTargets:
  &target backblaze-palebluedot:
    type: ObjectStore
    vendor: Other
    objectStoreCredentials:
      url: https://s3.us-west-000.backblazeb2.com
      bucketName: palebluedot-tvk
      region: us-west-000
      credentialSecret:
        name: *target
    thresholdCapacity: 5Gi

backupPlan:
  mediadepot:
    backupTarget: *target
    backupPlanFlags:
      skipImageBackup: true
    policies:
      retention-policy:
        type: Retention
        spec:
          cleanupConfig:
            backupDays: 2
          default: false
          retentionConfig:
            dayOfWeek: Sunday
            weekly: 1
            latest: 10
      fullbackup-policy:
        type: Schedule
        spec:
          default: false
          scheduleConfig:
            schedule:
            - 40 4 * 1/3 *
      incremental-policy:
        type: Schedule
        spec:
          default: false
          scheduleConfig:
            schedule:
            - 45 4 * * *
    excludeResources:
      gvkSelector:
      - groupVersionKind:
          group: secrets.infisical.com
          kind: InfisicalSecret
          version: v1alpha1
      - groupVersionKind:
          kind: PersistentVolumeClaim
          version: v1
        objects:
        - sabnzbd-incomplete-downloads
        - mediadepot-downloads
      labelSelector:
      - matchExpressions:
        - key: tvk-skip-object
          operator: In
          values:
          - "true"

infisicalSecret:
  sabnzbd-config:
    syncInterval: 120
  sonarr-config:
    syncInterval: 120
  radarr-config:
    syncInterval: 120
  readarr-config:
    syncInterval: 120
  *target:
    syncInterval: 120
    secretsPath: global